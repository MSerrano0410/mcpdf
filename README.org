* Mcpdf

Mcpdf is a drop-in replacement for [[http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/][PDFtk]].

It fixes PDFtk's unicode issues when filling in PDF forms,
and is essentially a command line interface
to the [[http://itextpdf.com/product/itext][iText PDF library]]
with a PDFtk compatible syntax.

** Getting Started

1. Make sure you have installed a
   Java Runtime Environment such as [[http://openjdk.java.net/][OpenJDK]].

2. [[https://oss.sonatype.org/content/repositories/releases/aero/m-click/mcpdf/0.2.1/mcpdf-0.2.1-jar-with-dependencies.jar][Download]] the latest standalone version
   of Mcpdf (jar-with-dependencies).

3. For the sake of brevity,
   we'll refer to this file as =mcpdf.jar=.
   So you should either rename the file
   or create a symlink:

   #+BEGIN_SRC sh
   ln -s mcpdf-0.2.1-jar-with-dependencies.jar mcpdf.jar
   #+END_SRC

4. Test it via:

   #+BEGIN_SRC sh
   java -jar mcpdf.jar
   #+END_SRC

** Usage

Mcpdf is a drop-in replacement for PDFtk.
Take a working [[http://www.pdflabs.com/docs/pdftk-man-page/][PDFtk command]]
and replace =pdftk= with =java -jar mcpdf.jar=.
That's all there is to it.

For example, the following command
fills in form data from =DATA.xfdf= into =FORM.pdf=
and writes the result to =RESULT.pdf=.
It also flattens the document to prevent further editing:

#+BEGIN_SRC sh
java -jar mcpdf.jar FORM.pdf fill_form - output - flatten < DATA.xfdf > RESULT.pdf
#+END_SRC

This corresponds exactly to the usual PDFtk command:

#+BEGIN_SRC sh
pdftk FORM.pdf fill_form - output - flatten < DATA.xfdf > RESULT.pdf
#+END_SRC

Note that not all PDFtk operations
are implemented at the moment.

[[https://github.com/m-click/mcpdf/issues][Please create an issue tracker entry]]
if you see something missing.

** Advanced Topics

*** Combine with Another Library Version

1. [[https://oss.sonatype.org/content/repositories/releases/aero/m-click/mcpdf/0.2.1/mcpdf-0.2.1.jar][Download]] the plain JAR file (mcpdf-0.2.1.jar)
   instead of the jar-with-dependencies.

2. [[https://search.maven.org/#search|gav|1|g%3A%22com.itextpdf%22%20AND%20a%3A%22itextpdf%22][Download]] the version of the iText PDF library
   you want to use (itextpdf-X.Y.Z.jar).

3. Run both in combination:

   #+BEGIN_SRC sh
   java -cp itextpdf-X.Y.Z.jar:mcpdf-0.2.1.jar aero.m_click.mcpdf.Main
   #+END_SRC

*** Build from Source

1. Make sure you have installed [[https://maven.apache.org/][Maven]] and [[http://git-scm.com/][Git]].

2. Download the latest Mcpdf source
   and change into that folder:

   #+BEGIN_SRC sh
   git clone https://github.com/m-click/mcpdf.git
   cd mcpdf
   #+END_SRC

3. Build the plain JAR file
   as well as the jar-with-dependencies:

   #+BEGIN_SRC sh
   mvn package
   #+END_SRC

   This will download
   the correct version of the iText PDF library
   and all required Maven modules automatically.

4. You'll find the JAR files in the =target= subfolder.

*** Deploy Releases

Mcpdf uses the [[https://docs.sonatype.org/display/Repository/Sonatype%2BOSS%2BMaven%2BRepository%2BUsage%2BGuide][Sonatype OSSRH]]
(OSS Repository Hosting Service).
The project creation ticket was [[https://issues.sonatype.org/browse/OSSRH-8759][OSSRH-8759]].

1. Create =~/.m2/settings.xml=:

   #+BEGIN_SRC xml
   <settings>
     <servers>
       <server>
         <id>sonatype-nexus-snapshots</id>
         <username>...</username>
         <password>...</password>
       </server>
       <server>
         <id>sonatype-nexus-staging</id>
         <username>...</username>
         <password>...</password>
       </server>
     </servers>
   </settings>
   #+END_SRC

2. Prepare documentation:

   #+BEGIN_SRC sh
   VERSION=`sed -n 's/^  <version>\([^-]*\).*/\1/p' pom.xml`
   sed -i "s,mcpdf\([-/]\)[0-9.]*[0-9],mcpdf\1$VERSION,g" README.org
   git commit -m "Prepare documentation for release mcpdf-$VERSION" README.org
   #+END_SRC

3. Create a new release
   and upload it to the OSSRH staging area:

   #+BEGIN_SRC sh
   mvn release:clean
   mvn release:prepare
   mvn release:perform
   #+END_SRC

4. [[https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-8a.ReleaseIt][Follow the OSSRH release instructions]].

5. Push to GitHub:

   #+BEGIN_SRC sh
   git push
   #+END_SRC
